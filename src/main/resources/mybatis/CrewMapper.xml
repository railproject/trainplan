<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="org.railway.com.trainplan.repository.mybatis.HighLineCrewDao">

    <select id="findOne" parameterType="map" resultType="org.railway.com.trainplan.entity.HighLineCrewInfo">
        SELECT HLC.HIGHLINE_CREW_ID, HLC.CREW_DATE, HLC.CREW_BUREAU, HLC.CREW_TYPE, HLC.CREW_CROSS, HLC.CREW_GROUP, HLC.THROUGH_LINE,
        HLC.NAME1, HLC.TEL1, HLC.IDENTITY1, HLC.NAME2, HLC.TEL2, HLC.IDENTITY2, HLC.NOTE, HLC.RECORD_PEOPLE, HLC.RECORD_PEOPLE_ORG,
        HLC.RECORD_TIME, HLC.SUBMIT_TYPE FROM HIGHLINE_CREW HLC WHERE HLC.HIGHLINE_CREW_ID = '${crewHighLineId}'
    </select>


    <select id="findList" parameterType="map" resultType="map">
        SELECT HLC.HIGHLINE_CREW_ID, HLC.CREW_DATE, HLC.CREW_BUREAU, HLC.CREW_TYPE, HLC.CREW_CROSS, HLC.CREW_GROUP, HLC.THROUGH_LINE,
        HLC.NAME1, HLC.TEL1, HLC.IDENTITY1, HLC.NAME2, HLC.TEL2, HLC.IDENTITY2, HLC.NOTE, HLC.RECORD_PEOPLE, HLC.RECORD_PEOPLE_ORG,
        HLC.RECORD_TIME, HLC.SUBMIT_TYPE
        FROM HIGHLINE_CREW HLC
    </select>

    <delete id="delete" parameterType="string">
        DELETE FROM HIGHLINE_CREW HLC WHERE HLC.HIGHLINE_CREW_ID = #{crewHighLineId}
    </delete>

    <insert id="addCrew" parameterType="org.railway.com.trainplan.entity.HighLineCrewInfo">
        INSERT INTO HIGHLINE_CREW(HIGHLINE_CREW_ID, CREW_DATE, CREW_BUREAU, CREW_TYPE, CREW_CROSS,
        CREW_GROUP, THROUGH_LINE, NAME1, TEL1, IDENTITY1, NAME2, TEL2, IDENTITY2, NOTE, RECORD_PEOPLE,
        RECORD_PEOPLE_ORG, RECORD_TIME, SUBMIT_TYPE) VALUES (
            #{crewHighlineId, jdbcType=VARCHAR}, #{crewDate, jdbcType=VARCHAR}, #{crewBureau, jdbcType=VARCHAR},
            #{crewType, jdbcType=VARCHAR}, #{crewCross, jdbcType=VARCHAR}, #{crewGroup, jdbcType=VARCHAR},
            #{throughLine, jdbcType=VARCHAR}, #{name1, jdbcType=VARCHAR}, #{tel1, jdbcType=VARCHAR},
            #{identity1, jdbcType=VARCHAR}, #{name2, jdbcType=VARCHAR}, #{tel2, jdbcType=VARCHAR},
            #{identity2, jdbcType=VARCHAR}, #{note, jdbcType=VARCHAR}, #{recordPeople, jdbcType=VARCHAR},
            #{recordPeopleOrg, jdbcType=VARCHAR}, sysdate, #{submitType, jdbcType=NUMERIC}
        )
    </insert>

    <update id="update" parameterType="org.railway.com.trainplan.entity.HighLineCrewInfo">
        UPDATE  HIGHLINE_CREW
        SET CREW_DATE = #{crewDate},
        CREW_BUREAU = #{crewBureau},
        CREW_TYPE = #{crewType},
        CREW_CROSS = #{crewCross},
        CREW_GROUP = #{crewGroup},
        THROUGH_LINE = #{throughLine},
        NAME1 = #{name1},
        TEL1 = #{tel1},
        IDENTITY1 = #{identity1},
        NAME2 = #{name2},
        TEL2 = #{tel2},
        IDENTITY2 = #{identity2},
        NOTE = #{note},
        RECORD_PEOPLE = #{recordPeople},
        RECORD_PEOPLE_ORG = #{recordPeopleOrg},
        SUBMIT_TYPE = #{submitType})
        WHERE HIGHLINE_CREW_ID = #{crewHighLineId}
    </update>
    
    
    <!-- 通过run_date（必输）和train_nbr（非必输）查询 -->
     <select id="findRunPlanList" resultType="org.railway.com.trainplan.entity.RunPlan">
		SELECT P.*
		FROM 
		(
			SELECT M.*, ROWNUM NUM
			FROM (
					    
				 SELECT   
				 PLAN_TRAIN_ID AS planTrainId,
				 PLAN_TRAIN_SIGN AS planTrainSign,
				 PLAN_CROSS_ID AS planCrossId,
				 MARSHALLING_NAME AS marshallingName,
				 GROUP_SERIAL_NBR AS groupSerialNbr,
				 TRAIN_SORT AS trainSort,
				 PRE_TRAIN_ID AS preTrainId,
				 NEXT_TRAIN_ID AS nextTrainId,
				 RUN_DATE AS runDate,
				 TRAIN_NBR AS trainNbr,
				 START_TIME AS startDateTime,
				 END_TIME AS endDateTime,
				 START_BUREAU AS startBureauShortName,
				 START_BUREAU_FULL AS startBureauFullName,
				 START_STN AS startStn,
				 END_BUREAU AS endBureauShortName,
				 END_BUREAU_FULL AS endBureauFullName,
				 END_STN AS endStn,
				 PASS_BUREAU AS passBureau,
				 TRAIN_SCOPE AS trainScope,
				 TRAIN_TYPE_ID AS trainTypeId,
				 HIGHLINE_FLAG AS highLineFlag,
				 BASE_CHART_ID AS baseChartId,
				 BASE_TRAIN_ID AS baseTrainId,
				 HIGHLINE_RULE AS hightLineRule,
				 COMMONLINE_RULE AS commonLineRule,
				 APPOINT_WEEK AS appointWeek,
				 APPOINT_DAY AS appointDay,
				 DAY_GAP AS dayGap,
				 SPARE_FLAG AS spareFlag,
				 SPARE_APPLY_FLAG AS spareApplyFlag,
				 CREAT_TYPE AS createType,
				 CREAT_TIME AS createDateTime,
				 CHECK_LEV1_TYPE AS checkLev1Type,
				 CHECK_LEV2_TYPE AS checkLev2Type,
				 DAILYPLAN_TIMES AS dailyPlanTimes,
				 DAILYPLAN_FLAG AS dailyPlanFlag
				 
				 FROM PLAN_TRAIN WHERE 1=1 AND RUN_DATE=#{run_date}
				 <if test="trainNbr !=null">
				     AND TRAIN_NBR=#{train_nbr}
				  </if>
 
			)M
		) P
		WHERE P.NUM>=#{rownumstart} AND P.NUM &lt;=#{rownumend}
   </select>


    <select id="findCrossDictList_COUNT" resultType="java.lang.Integer">
    	SELECT
		  COUNT(A.DRAW_GRAPH_ID)
		  
		FROM DRAW_GRAPH A 
		INNER JOIN BASE_CROSS B
		  	ON A.BASE_CROSS_ID = B.BASE_CROSS_ID
	   		AND A.BASE_CHART_ID = #{baseChartId}
	   	
   			<if test="crossName != null">
            	AND A.CROSS_NAME LIKE '%${crossName}%'
        	</if>
   			<if test="crossName != null">
            	AND B.TOKEN_VEH_BUREAU = #{tokenVehBureau}	<!-- 担当局 -->
        	</if>
    	
    </select>
    
</mapper> 
