<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="runPlanLkDao">
			
    <resultMap id="cmdTrain" type="org.railway.com.trainplan.entity.CmdTrain">
        <id column="cmdTrainId" property="cmdTrainId"/>
        <result column="cmdBureau" property="cmdBureau"/>
        <result column="cmdType" property="cmdType"/>
        <result column="cmdTxtMlId" property="cmdTxtMlId"/>
        <result column="cmdTxtMlItemId" property="cmdTxtMlItemId"/>
        <result column="cmdNbrBureau" property="cmdNbrBureau"/>
        <result column="cmdItem" property="cmdItem"/>
        <result column="cmdNbrSuperior" property="cmdNbrSuperior"/>
        <result column="trainNbr" property="trainNbr"/>
        <result column="startStn" property="startStn"/>
        <result column="endStn" property="endStn"/>
        <result column="startDate" property="startDate"/>
        <result column="endDate" property="endDate"/>
        <result column="rule" property="rule"/>
        <result column="selectedDate" property="selectedDate"/>
        <result column="passBureau" property="passBureau"/>
        <result column="selectState" property="selectState"/>
        <result column="createState" property="createState"/>
        <result column="updateTime" property="updateTime"/>
        <result column="cmdTime" property="cmdTime"/>
        <result column="baseTrainId" property="baseTrainId"/>
        
        <collection property="cmdTrainStnList" resultMap="cmdTrainStn"/>
    </resultMap>

    <resultMap id="cmdTrainStn" type="org.railway.com.trainplan.entity.CmdTrainStn">
        <id column="cmdTrainStnId" property="cmdTrainStnId"/>
        <result column="cmdTrainId" property="cmdTrainId"/>
        <result column="stnSort" property="stnSort"/>
        <result column="stnName" property="stnName"/>
        <result column="stnBureau" property="stnBureau"/>
        <result column="stnBureauFull" property="stnBureauFull"/>
        <result column="arrTrainNbr" property="arrTrainNbr"/>
        <result column="dptTrainNbr" property="dptTrainNbr"/>
        <result column="arrTime" property="arrTime"/>
        <result column="dptTime" property="dptTime"/>
        <result column="baseArrTime" property="baseArrTime"/>
        <result column="baseDptTime" property="baseDptTime"/>
        <result column="arrRunDays" property="arrRunDays"/>
        <result column="dptRunDays" property="dptRunDays"/>
        <result column="trackNbr" property="trackNbr"/>
        <result column="platform" property="platform"/>
        <result column="psgFlg" property="psgFlg"/>
        <result column="locoFlag" property="locoFlag"/>
        <result column="tecType" property="tecType"/>
        <result column="stnType" property="stnType"/>     
    </resultMap>

   
   <select id="getCmdTrandAndStnInfo" parameterType="string"  resultMap="cmdTrain">
     SELECT   
            A.CMD_TRAIN_ID  AS cmdTrainId,
			A.CMD_BUREAU  AS cmdBureau,
			A.CMD_TYPE  AS cmdType,
			A.CMD_TXTMLID  AS cmdTxtMlId,
			A.CMD_TXTMLITEMID  AS cmdTxtMlItemId,
			A.CMD_NBR_BUREAU  AS cmdNbrBureau,
			A.CMD_ITEM  AS cmdItem,
			A.CMD_NBR_SUPERIOR  AS cmdNbrSuperior,
			A.TRAIN_NBR  AS trainNbr,
			A.START_STN  AS startStn,
			A.END_STN AS endStn,
		    to_char(A.START_DATE,'yyyy-MM-dd')  AS startDate,
			to_char(A.END_DATE ,'yyyy-MM-dd')  AS endDate,
			A.RULE  AS rule,
			A.SELECTED_DATE  AS selectedDate,
		    A.PASS_BUREAU  AS passBureau,
			A.SELECT_STATE  AS selectState,
			A.CREATE_STATE  AS createState,
			A.BASE_TRAIN_ID AS baseTrainId,
			TO_CHAR(A.UPDATE_TIME,'yyyy-MM-dd hh24:mi:SS')  AS updateTime,
			TO_CHAR(A.CMD_TIME,'yyyy-MM-dd')  AS cmdTime,
	        B.CMD_TRAIN_STN_ID AS cmdTrainStnId ,
			B.CMD_TRAIN_ID AS  cmdTrainId,
			B.STN_SORT AS  stnSort,
			B.STN_NAME AS stnName ,
			B.STN_BUREAU AS stnBureau ,
			B.STN_BUREAU_FULL AS stnBureauFull,
			B.ARR_TRAIN_NBR AS  arrTrainNbr,
			B.DPT_TRAIN_NBR AS  dptTrainNbr,
			B.ARR_TIME AS arrTime ,
			B.DPT_TIME AS  dptTime,
			B.BASE_ARR_TIME AS  baseArrTime,
			B.BASE_DPT_TIME AS  baseDptTime,
			B.ARR_RUN_DAYS AS  arrRunDays,
			B.DPT_RUN_DAYS AS dptRunDays,
			B.TRACK_NBR AS trackNbr ,
			B.PLATFORM AS  platform,
			B.PSG_FLG AS  psgFlg,
			B.LOCO_FLAG AS  locoFlag,
			B.TEC_TYPE AS tecType ,
			B.STN_TYPE AS  stnType
        FROM CMD_TRAIN A,CMD_TRAIN_STN B WHERE A.CMD_TRAIN_ID = B.CMD_TRAIN_ID AND A.CMD_TRAIN_ID=#{cmdTrainId} ORDER BY B.STN_SORT
   
   </select>
   
   <select id="getPlanTrainLkInfo"  parameterType="map" resultType="org.railway.com.trainplan.entity.RunPlan">
     
     select 
         wmsys.wm_concat(plan_train_id) as planTrainId,
         train_nbr as trainNbr,
         start_stn as startStn,
         end_stn as endStn,
         TOKEN_VEH_BUREAU  as tokenVehBureau,
         CMD_SHORTINFO as cmdShortInfo
         from PLAN_TRAIN 
         WHERE 1=1 AND CREAT_TYPE = 3
		<if test="startDate != null and startDate !='' ">AND RUN_DATE>=#{startDate}</if>
		<if test="endDate !=null and endDate !='' ">AND RUN_DATE &lt;=#{endDate}</if>
		<if test="trainNbr !=null and trainNbr !='' ">AND TRAIN_NBR =#{trainNbr}</if>
		<if test="startBureau != null and startBureau !='' ">AND START_BUREAU = #{startBureau}</if>
		<if test="isRelationBureau == '1' ">AND #{bureau} in (PASS_BUREAU)</if>
		<if test="tokenVehBureau !=null and tokenVehBureau !='' ">AND TOKEN_VEH_BUREAU =#{tokenVehBureau}</if>
         group by train_nbr,start_stn,end_stn,TOKEN_VEH_BUREAU,CMD_SHORTINFO
   </select>
   
   
    <select id="getTrainLkRunPlans" parameterType="map" resultType="org.railway.com.trainplan.entity.CrossRunPlanInfo">
       select t.run_date runDay,
			  t.train_nbr trainNbr,
              t.start_stn startStn,
              t.end_stn endStn,
              t.spare_flag runFlag 
      from plan_train t 
      where CREAT_TYPE = 3 and t.train_nbr=#{trainNbr}  and t.run_date>=#{startDate} and t.run_date &lt;=#{endDate} order by t.TRAIN_SORT, t.run_date
    </select>
    
    
    
     <resultMap id="trainSubInfo" type="org.railway.com.trainplan.entity.TrainLineSubInfo">
	        <id column="planTrainId" property="planTrainId"/>
            <collection property="trainStaionList" resultMap="trainSubInfoTime"/>
    </resultMap>
 
    <resultMap id="trainSubInfoTime" type="org.railway.com.trainplan.entity.TrainLineSubInfoTime">
	        <id column="planTrainStnId" property="planTrainStnId"/>
	        <result column="stationType" property="stationType"/>
	        <result column="stnName" property="stnName"/>
	        <result column="stnSort" property="stnSort"/>
	        <result column="arrTime" property="arrTime"/>
	        <result column="dptTime" property="dptTime"/>
	
    </resultMap>
     
     
     
     
    <select id="getTrainLkInfoForPlanTrainId"  parameterType="map"  resultMap="trainSubInfo">
       select 
	      CASE 
	        WHEN 
	          (SELECT COUNT(*) FROM JHPT_JCSJ.ZDFJK T3 WHERE T3.CNAME=T1.stn_name) >0 
	        THEN 'FJK'
	        WHEN T1.ARR_TIME=T1.DPT_TIME
	        THEN 'BT'
	        ELSE 'TZ'
	      END stationType ,
        T1.PLAN_TRAIN_STN_ID AS planTrainStnId,
		T1.PLAN_TRAIN_ID AS planTrainId,
		T1.STN_SORT AS stnSort,
		T1.STN_NAME AS stnName,
		T1.ARR_TIME AS arrTime ,
		T1.DPT_TIME AS dptTime
    from plan_train_stn T1 where T1.plan_train_id in (${planTrainIds})  order by T1.STN_SORT
    </select>
 

     <select id="getTrainLineSubinfoTime" parameterType="string" resultType="org.railway.com.trainplan.entity.TrainLineSubInfoTime">
     
	     select 
		      CASE 
		        WHEN 
		          (SELECT COUNT(*) FROM JHPT_JCSJ.ZDFJK T3 WHERE T3.CNAME=T1.stn_name) >0 
		        THEN 'FJK'
		        WHEN T1.ARR_TIME=T1.DPT_TIME
		        THEN 'BT'
		        ELSE 'TZ'
		      END stationType ,
	        T1.PLAN_TRAIN_STN_ID AS planTrainStnId,
			T1.STN_SORT AS stnSort,
			T1.STN_NAME AS stnName,
			T1.ARR_TIME AS arrTime ,
			T1.DPT_TIME AS dptTime
	    from plan_train_stn T1 where T1.plan_train_id = #{planTrainId} order by T1.STN_SORT

     </select>
     
     
	 <select id="getCmdTrainInfoForCmdTxtmlItemId" parameterType="map"  resultType="org.railway.com.trainplan.entity.CmdTrain">
		SELECT 
		    CMD_TRAIN_ID  AS cmdTrainId,
			CMD_BUREAU  AS cmdBureau,
			CMD_TYPE  AS cmdType,
			CMD_TXTMLID  AS cmdTxtMlId,
			CMD_TXTMLITEMID  AS cmdTxtMlItemId,
			CMD_NBR_BUREAU  AS cmdNbrBureau,
			CMD_ITEM  AS cmdItem,
			CMD_NBR_SUPERIOR  AS cmdNbrSuperior,
			TRAIN_NBR  AS trainNbr,
			START_STN  AS startStn,
			END_STN  AS endStn,
			START_DATE  AS startDate,
			END_DATE  AS endDate,
			RULE  AS rule,
			SELECTED_DATE  AS selectedDate,
			PASS_BUREAU  AS passBureau,
			SELECT_STATE  AS selectState,
			CREATE_STATE  AS createState,
			TO_CHAR(UPDATE_TIME,'yyyy-MM-dd hh24:mi:SS')  AS updateTime,
			TO_CHAR(CMD_TIME,'yyyy-MM-dd hh24:mi:SS')  AS cmdTime
		FROM CMD_TRAIN WHERE CMD_TXTMLITEMID=${cmdTxtmlItemId}
		
     </select>

    
    <select id="getCmdTrainStnInfo"  parameterType="string"  resultType="org.railway.com.trainplan.entity.CmdTrainStn">
      SELECT
        CMD_TRAIN_STN_ID AS cmdTrainStnId ,
		CMD_TRAIN_ID AS  cmdTrainId,
		STN_SORT AS  stnSort,
		STN_NAME AS stnName ,
		STN_BUREAU AS stnBureau ,
		STN_BUREAU_FULL AS stnBureauFull,
		ARR_TRAIN_NBR AS  arrTrainNbr,
		DPT_TRAIN_NBR AS  dptTrainNbr,
		ARR_TIME AS arrTime ,
		DPT_TIME AS  dptTime,
		BASE_ARR_TIME AS  baseArrTime,
		BASE_DPT_TIME AS  baseDptTime,
		ARR_RUN_DAYS AS  arrRunDays,
		DPT_RUN_DAYS AS dptRunDays,
		TRACK_NBR AS trackNbr ,
		PLATFORM AS  platform,
		PSG_FLG AS  psgFlg,
		LOCO_FLAG AS  locoFlag,
		TEC_TYPE AS tecType ,
		STN_TYPE AS  stnType
		      
      
      FROM CMD_TRAIN_STN  WHERE CMD_TRAIN_ID=#{cmdTrainId} ORDER BY STN_SORT
    
    </select>
    
     <insert id="insertMTrainLine" parameterType="org.railway.com.trainplan.entity.MTrainLine">
	      MERGE INTO JHPT_RJH.M_TRAINLINE A
			USING (SELECT * FROM DUAL) B
			ON (A.ID = #{id})
			WHEN MATCHED THEN
			  UPDATE
			     SET 
			        A.NAME           =#{name} ,
			        A.RESOURCE_NAME = #{resourceName},	                     
				    A.TYPE_NAME = #{typeName},	                      
				    A.OPERATION = #{operation},	                     
					A.SOURCE_BUREAU_NAME = #{sourceBureauName} ,              
					A.SOURCE_BUREAU_SHORTNAME = #{sourceBureauShortname} ,	               
					A.SOURCE_NODE_NAME = #{sourceNodeName},		
					A.TARGET_NODE_NAME = #{targetNodeName},			
					A.TARGET_BUREAU_NAME =#{targetBureauName} ,			
					A.TARGET_BUREAU_SHORTNAME =#{targetBureauShortname} ,			
					A.ROUTE_BUREAU_SHORTNAMES = #{routeBureauShortname},			
					A.SOURCE_TIME = TO_DATE(#{sourceTime},'yyyy-MM-dd hh24:mi:SS') ,				
					A.TARGET_TIME = TO_DATE(#{targetTime},'yyyy-MM-dd hh24:mi:SS') 		
			WHEN NOT MATCHED THEN
			  INSERT 
			    (
				    A.ID,	                         
					A.NAME,                                
					A.RESOURCE_NAME,	                     
					A.TYPE_NAME,	                      
					A.OPERATION,	                     
					A.SOURCE_BUREAU_NAME,              
					A.SOURCE_BUREAU_SHORTNAME,	               
					A.SOURCE_NODE_NAME,		
					A.TARGET_NODE_NAME,			
					A.TARGET_BUREAU_NAME,			
					A.TARGET_BUREAU_SHORTNAME,			
					A.ROUTE_BUREAU_SHORTNAMES,			
					A.SOURCE_TIME,				
					A.TARGET_TIME	
			    
			    )
			  VALUES
			    (
			     #{id},
				 #{name},
				 #{resourceName},
				 #{typeName},
				 #{operation} ,
				 #{sourceBureauName},
				 #{sourceBureauShortname},
				 #{sourceNodeName},
				 #{targetNodeName},
				 #{targetBureauName},
				 #{targetBureauShortname},
				 #{routeBureauShortname},
				 TO_DATE(#{sourceTime},'yyyy-MM-dd hh24:mi:SS') ,
			     TO_DATE(#{targetTime},'yyyy-MM-dd hh24:mi:SS')  
			    )
    
	</insert>
	
	 <insert id="insertMTrainLineStnSource" parameterType="org.railway.com.trainplan.entity.MTrainLineStn">
	 
	   MERGE INTO JHPT_RJH.M_TRAINLINE_SCHEDULE_SITEM A
			USING (SELECT * FROM DUAL) B
			ON (A.ID = #{id})
			WHEN MATCHED THEN
			  UPDATE
			     SET 
			       
			        A.NAME           =#{name} ,
			        A.PARENT_ID = #{parentId},	                     
				    A.PARENT_NAME = #{parentName},	                      
				    A.CHILD_INDEX = ${childIndex},	                     
					A.BUREAU_NAME = #{bureauName} ,              
					A.BUREAU_SHORTNAME = #{bureauShortname} ,	               
					A.TRACK_NAME = #{trackName},		
					A.time = TO_DATE(#{time},'yyyy-MM-dd hh24:mi:SS') 			
						
			WHEN NOT MATCHED THEN
			  INSERT 
			    (
				    A.ID,		
					A.NAME,			
					A.PARENT_ID,		
					A.PARENT_NAME,		
					A.CHILD_INDEX,			
					A.BUREAU_NAME,	
					A.BUREAU_SHORTNAME,	
					A.TRACK_NAME,
					A.time   
			    
			    )
			  VALUES
			    (
					 #{id},
					 #{name},
					 #{parentId},
					 #{parentName},
					 ${childIndex} ,
					 #{bureauName},
					 #{bureauShortname},
					 #{trackName},
					 TO_DATE(#{time},'yyyy-MM-dd hh24:mi:SS')  
			    )
	</insert>	
	
	 <insert id="insertMTrainLineStnRoute"  parameterType="org.railway.com.trainplan.entity.MTrainLineStn">  
	 
	   MERGE INTO JHPT_RJH.M_TRAINLINE_SCHEDULE_RITEM A
			USING (SELECT * FROM DUAL) B
			ON (A.ID =#{id})
			WHEN MATCHED THEN
			  UPDATE
			     SET 
			        A.NAME           =#{name} ,
			        A.PARENT_ID = #{parentId},	                     
				    A.PARENT_NAME = #{parentName},	                      
				    A.CHILD_INDEX = #{childIndex},	                     
					A.BUREAU_NAME = #{bureauName} ,              
					A.BUREAU_SHORTNAME = #{bureauShortname} ,	               
					A.TRACK_NAME = #{trackName},		
					A.SOURCE_TIME = TO_DATE(#{sourceTime},'yyyy-MM-dd hh24:mi:SS'),			
					A.TARGET_TIME = TO_DATE(#{targetTime},'yyyy-MM-dd hh24:mi:SS') 	
			WHEN NOT MATCHED THEN
			  INSERT 
			    (
				    A.ID,		
					A.NAME,			
					A.PARENT_ID,		
					A.PARENT_NAME,		
					A.CHILD_INDEX,			
					A.BUREAU_NAME,	
					A.BUREAU_SHORTNAME,	
					A.TRACK_NAME,
					A.SOURCE_TIME, 
			        A.TARGET_TIME
			    )
			  VALUES
			    (
					 #{id},
					 #{name},
					 #{parentId},
					 #{parentName},
					 #{childIndex} ,
					 #{bureauName},
					 #{bureauShortname},
					 #{trackName},
					 TO_DATE(#{sourceTime},'yyyy-MM-dd hh24:mi:SS'), 
			         TO_DATE(#{targetTime},'yyyy-MM-dd hh24:mi:SS') 
			    )

   </insert>
  
   <insert id="insertMTrainLineStnTarget" parameterType="org.railway.com.trainplan.entity.MTrainLineStn">
   
     MERGE INTO JHPT_RJH.M_TRAINLINE_SCHEDULE_TITEM A
			USING (SELECT * FROM DUAL) B
			ON (A.ID = #{id})
			WHEN MATCHED THEN
			  UPDATE
			     SET 
			        A.NAME           =#{name} ,
			        A.PARENT_ID = #{parentId},	                     
				    A.PARENT_NAME = #{parentName},	                      
				    A.CHILD_INDEX = #{childIndex},	                     
					A.BUREAU_NAME = #{bureauName} ,              
					A.BUREAU_SHORTNAME = #{bureauShortname} ,	               
					A.TRACK_NAME = #{trackName},		
					A.time = TO_DATE(#{time},'yyyy-MM-dd hh24:mi:SS') 			
						
			WHEN NOT MATCHED THEN
			  INSERT 
			    (
				    A.ID,		
					A.NAME,			
					A.PARENT_ID,		
					A.PARENT_NAME,		
					A.CHILD_INDEX,			
					A.BUREAU_NAME,	
					A.BUREAU_SHORTNAME,	
					A.TRACK_NAME,
					A.time   
			    
			    )
			  VALUES
			    (
					 #{id},
					 #{name},
					 #{parentId},
					 #{parentName},
					 #{childIndex} ,
					 #{bureauName},
					 #{bureauShortname},
					 #{trackName},
					 TO_DATE(#{time},'yyyy-MM-dd hh24:mi:SS')  
			    )
	</insert>	  
    
    
    <insert id="insertCmdTrain" parameterType="org.railway.com.trainplan.entity.CmdTrain">
     insert into CMD_TRAIN(
            CMD_TRAIN_ID ,
            BASE_TRAIN_ID,
			CMD_BUREAU  ,
			CMD_TYPE ,
			CMD_TXTMLID ,
			CMD_TXTMLITEMID  ,
			CMD_NBR_BUREAU ,
			CMD_ITEM ,
			CMD_NBR_SUPERIOR ,
			TRAIN_NBR ,
			START_STN ,
			END_STN ,
			START_DATE ,
			END_DATE ,
			RULE  ,
			SELECTED_DATE ,
			PASS_BUREAU ,
			SELECT_STATE ,
			CREATE_STATE ,
			UPDATE_TIME, 
			CMD_TIME
		)values(
		    #{cmdTrainId},
		    #{baseTrainId},
		    #{cmdBureau},
		    #{cmdType},
		    #{cmdTxtMlId},
		    #{cmdTxtMlItemId},
		    #{cmdNbrBureau},
		    #{cmdItem},
		    #{cmdNbrSuperior},
		    #{trainNbr},
		    #{startStn},
		    #{endStn},
		    TO_DATE(#{startDate},'yyyy-MM-dd'),
		    TO_DATE(#{endDate},'yyyy-MM-dd'),
		    #{rule},
		    #{selectedDate},
		    #{passBureau},
		    #{selectState},
		    #{createState},
		    sysdate,
		    TO_DATE(#{cmdTime},'yyyy-MM-dd')		    
		)
		
    
    </insert>
    
    
    <insert id="insertCmdTrainStn" parameterType="org.railway.com.trainplan.entity.CmdTrainStn">
      insert into CMD_TRAIN_STN (
            CMD_TRAIN_STN_ID  ,
			CMD_TRAIN_ID ,
			STN_SORT ,
			STN_NAME ,
			STN_BUREAU  ,
			STN_BUREAU_FULL,
			ARR_TRAIN_NBR ,
			DPT_TRAIN_NBR ,
			ARR_TIME  ,
			DPT_TIME,
			BASE_ARR_TIME  ,
			BASE_DPT_TIME  ,
		    ARR_RUN_DAYS ,
		    DPT_RUN_DAYS ,
			TRACK_NBR  ,
			PLATFORM ,
			PSG_FLG,
			LOCO_FLAG ,
			TEC_TYPE ,
			STN_TYPE  
         )values(
            #{cmdTrainStnId},
            #{cmdTrainId},
            #{stnSort},
            #{stnName},
            #{stnBureau},
            #{stnBureauFull},
            #{arrTrainNbr},
            #{dptTrainNbr},
            #{arrTime},
            #{dptTime},
            #{baseArrTime},
            #{baseDptTime},
            #{arrRunDays},
            #{dptRunDays},
            #{trackNbr},
            #{platform},
            #{psgFlg},
            #{locoFlag},
            #{tecType},
            #{stnType}
	       )
  
  </insert>
            
   <insert id="addRunPlanLk" parameterType="org.railway.com.trainplan.entity.RunPlan">
        INSERT INTO PLAN_TRAIN
        (
        PLAN_TRAIN_ID, 
        PLAN_TRAIN_SIGN,
        RUN_DATE,
        TRAIN_NBR,
        START_TIME,
        END_TIME,
        START_BUREAU,
        START_BUREAU_FULL,
        START_STN,
        END_BUREAU,
        END_BUREAU_FULL,
        END_STN,
        PASS_BUREAU,
        TRAIN_SCOPE,
        HIGHLINE_FLAG,
        BASE_TRAIN_ID,
        SPARE_FLAG,
        CREAT_TYPE,
        CREAT_TIME,
        CHECK_LEV1_TYPE,
        DAILYPLAN_FLAG,
        CMD_BUREAU,
        CMD_TXTMLID,
        CMD_TXTMLITEMID,
        CMD_SHORTINFO,
        CMD_TRAIN_ID,
        CREAT_PEOPLE,
        CREAT_PEOPLE_ORG,
        TOKEN_VEH_BUREAU
        )
        VALUES(
        #{planTrainId, jdbcType=VARCHAR}, 
        #{planTrainSign, jdbcType=VARCHAR}, 
        #{runDate, jdbcType=VARCHAR}, 
        #{trainNbr, jdbcType=VARCHAR}, 
        #{startDateTime, jdbcType=DATE},
        #{endDateTime, jdbcType=DATE},
        #{startBureauShortName, jdbcType=VARCHAR}, 
        #{startBureauFullName, jdbcType=VARCHAR}, 
        #{startStn, jdbcType=VARCHAR},
        #{endBureauShortName, jdbcType=VARCHAR},
        #{endBureauFullName, jdbcType=VARCHAR}, 
        #{endStn, jdbcType=VARCHAR}, 
        #{passBureau, jdbcType=VARCHAR},
        #{trainScope, jdbcType=NUMERIC},
        #{highLineFlag, jdbcType=NUMERIC}, 
        #{baseTrainId, jdbcType=VARCHAR},
        #{spareFlag, jdbcType=NUMERIC}, 
        #{createType, jdbcType=NUMERIC}, 
        sysdate, 
        #{checkLev1Type, jdbcType=NUMERIC}, 
        #{dailyPlanFlag, jdbcType=NUMERIC},
        #{cmdBureau,jdbcType=VARCHAR},
        #{cmdTxtmlId,jdbcType=NUMERIC},
        #{cmdTxtmlitemId,jdbcType=NUMERIC},
        #{cmdShortInfo,jdbcType=VARCHAR},
        #{cmdTrainId,jdbcType=VARCHAR},
        #{createPeople,jdbcType=VARCHAR},
        #{createPeopleOrg,jdbcType=VARCHAR},
        #{tokenVehBureau,jdbcType=VARCHAR}
        )
    </insert>
    
    
    <insert id="addRunPlanLkTrainStn"  parameterType="java.util.Map">                         	
       INSERT INTO PLAN_TRAIN_STN
       (
        PLAN_TRAIN_STN_ID,
        PLAN_TRAIN_ID,
        STN_SORT,
        STN_NAME,
        STN_BUREAU,
        STN_BUREAU_FULL,
        ARR_TRAIN_NBR,
        DPT_TRAIN_NBR,
        ARR_TIME,
        DPT_TIME,
        BASE_ARR_TIME,
        BASE_DPT_TIME,
        TRACK_NBR,
        TRACK_NAME,
        PLATFORM,
        PSG_FLG,
        LOCO_FLAG,
        TEC_TYPE,
        STN_TYPE,
        RUN_DAYS,
        ARR_RUN_DAYS
        )
        (

        <foreach collection="trainStnList" item="item" index="index"
                 separator="UNION ALL">
            <![CDATA[
	       SELECT 
	        #{item.planTrainStnId, jdbcType=VARCHAR},
            #{item.planTrainId, jdbcType=VARCHAR},
            #{item.stnSort, jdbcType=NUMERIC},
            #{item.stnName, jdbcType=VARCHAR},
            #{item.stnBureauShortName, jdbcType=VARCHAR},
            #{item.stnBureauFullName, jdbcType=VARCHAR},
            #{item.arrTrainNbr, jdbcType=VARCHAR},
            #{item.dptTrainNbr, jdbcType=VARCHAR},
            #{item.arrTime, jdbcType=DATE},
            #{item.dptTime, jdbcType=DATE},
            #{item.baseArrTime, jdbcType=DATE},
            #{item.baseDptTime, jdbcType=DATE},
            #{item.trackNbr, jdbcType=VARCHAR},
            #{item.trackName, jdbcType=VARCHAR},
            #{item.platform, jdbcType=NUMERIC},
            #{item.psgFlag, jdbcType=NUMERIC},
            #{item.locoFlag, jdbcType=NUMERIC},
            #{item.tecType, jdbcType=VARCHAR},
            #{item.stnType, jdbcType=VARCHAR},
            #{item.tRunDays, jdbcType=VARCHAR},
            #{item.sRunDays, jdbcType=VARCHAR} 
            
            FROM DUAL
	         ]]>
        </foreach>

        )

    </insert>
    
    
    
    
    
  <delete id="deleteCmdTrainStnForCmdTrainId"  parameterType="map">
  
    DELETE FROM CMD_TRAIN_STN WHERE CMD_TRAIN_ID = #{cmdTrainId} 
    <if test="stnBureau != null">AND STN_BUREAU=#{stnBureau}</if>
  </delete>
  
  <update id="updatePassBureauForCmdTraindId"  parameterType="map">
    UPDATE CMD_TRAIN SET PASS_BUREAU = #{passBureau} WHERE CMD_TRAIN_ID = #{cmdTrainId}
  </update>
    
  <select id="getBaseStationInfo" parameterType="string" resultType="map">
    
     select 
		A.ZM AS STNNAME, 
		B.LJPYM AS STNBUREAU,
		B.LJQC AS STNBUREAUFULLNAME,
		B.LJJC AS  STNBUREAUSHORTNAME
		from jhpt_jcsj.ZMZD A,jhpt_jcsj.LJZD B
	WHERE A.LJPYM = B.LJPYM AND A.ZM = #{stnName}
    
   </select>
   
   
   <select id="getCmdTraindForMultipleParame" parameterType="map"  resultType="org.railway.com.trainplan.entity.CmdTrain">
     SELECT 
            CMD_TRAIN_ID  AS cmdTrainId,
			CMD_BUREAU  AS cmdBureau,
			CMD_TYPE  AS cmdType,
			CMD_TXTMLID  AS cmdTxtMlId,
			CMD_TXTMLITEMID  AS cmdTxtMlItemId,
			CMD_NBR_BUREAU  AS cmdNbrBureau,
			CMD_ITEM  AS cmdItem,
			CMD_NBR_SUPERIOR  AS cmdNbrSuperior,
			TRAIN_NBR  AS trainNbr,
			START_STN  AS startStn,
			END_STN  AS endStn,
			START_DATE  AS startDate,
			END_DATE  AS endDate,
			RULE  AS rule,
			SELECTED_DATE  AS selectedDate,
			PASS_BUREAU  AS passBureau,
			SELECT_STATE  AS selectState,
			CREATE_STATE  AS createState,
			TO_CHAR(UPDATE_TIME,'yyyy-MM-dd hh24:mi:SS')  AS updateTime,
			TO_CHAR(CMD_TIME,'yyyy-MM-dd hh24:mi:SS')  AS cmdTime
     FROM CMD_TRAIN 
     WHERE 1=1 
     AND CMD_TIME >= TO_DATE(#{startDate},'yyyy-MM-dd hh24:mi:SS') AND CMD_TIME &lt;=TO_DATE(#{endDate},'yyyy-MM-dd hh24:mi:SS')
     AND CMD_BUREAU != #{userBureau}
     <if test="trainNbr != null and trainNbr != '' ">
     AND TRAIN_NBR = #{trainNbr}
     </if>
     <if test="cmdNbrSuperior != null and cmdNbrSuperior != '' ">
     AND CMD_NBR_SUPERIOR = #{cmdNbrSuperior}
     </if>
     <if test="cmdBureau != null and cmdBureau != '' ">
     AND CMD_BUREAU = #{cmdBureau}
     </if>
    <if test="cmdType != 'all' ">
     AND CMD_TYPE = #{cmdType}
    </if>
    <if test="createState != 'all' ">
    AND CREATE_STATE = #{createState}
    </if>
    <if test="selectState != null and selectState != '' ">
    AND SELECT_STATE = #{selectState}
    </if>
   </select>
   
   
   <select id="getPlanTrainIdForCmdTrainId" parameterType="string"  resultType="map">
   
     select  plan_train_id as planTraindId

     from plan_train where cmd_train_id=#{cmdTrainId}
   
   
   </select>
   
   <delete id="deleteTrainForCmdTrainId" parameterType="string">
     delete from plan_train where cmd_train_id = #{cmdTrainId}
   
   </delete>
   
   <delete id="deleteTrainStnForPlanTrainId" parameterType="string">
    delete from plan_train_stn where plan_train_id = #{planTrainId}
   </delete>
   
   <update id="updateCreateStateForCmdTrainId" parameterType="map">
   UPDATE CMD_TRAIN SET CREATE_STATE = #{createState} where CMD_TRAIN_ID=#{cmdTrainId}
   </update>
</mapper>