<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="highlineCrossDao">


	
  <resultMap id="trainSubInfo" type="org.railway.com.trainplan.entity.HighlineTrainRunLine">
	        <id column="planTrainId" property="planTrainId"/>
	        <result column="trainNbr" property="trainNbr"/>
	         <result column="highLineTrainId" property="highLineTrainId"/> 
            <collection property="highlineTrainTimeList" resultMap="trainSubInfoTime"/>
    </resultMap>
 
    <resultMap id="trainSubInfoTime" type="org.railway.com.trainplan.entity.HighlineTrainRunLineTime">
	        <id column="planTrainStnId" property="planTrainStnId"/>
	        <result column="stnName" property="stnName"/>
	        <result column="stnSort" property="stnSort"/>
	        <result column="arrTime" property="arrTime"/>
	        <result column="dptTime" property="dptTime"/>
    </resultMap>
  
  <select id="getHighlineCrossInfo" parameterType="org.railway.com.trainplan.entity.HighlineCrossInfo" resultType="org.railway.com.trainplan.entity.HighlineCrossInfo">
       SELECT
         t.HIGHLINE_CROSS_ID AS highlineCrossId,
		 t.PLAN_CROSS_ID AS planCrossId,
		 t.CROSS_START_DATE AS crossStartDate,
		 t.CROSS_END_DATE AS crossEndDate,
		 t.CROSS_START_STN AS crossStartStn,
         t.CROSS_END_STN AS crossEndStn,
		 t.CROSS_NAME AS crossName,
		 t.SPARE_FLAG AS spareFlag,
		 t.RELEVANT_BUREAU AS relevantBureau,
		 t.TOKEN_VEH_BUREAU AS tokenVehBureau,
		 t.TOKEN_VEH_DEPT AS tokenVehDept,
		 t.TOKEN_VEH_DEPOT AS tokenVehDepot,
		 t.TOKEN_PSG_BUREAU AS tokenPsgBureau ,
		 t.TOKEN_PSG_DEPT AS tokenPsgDept,
		 t.CRH_TYPE AS crhType,
		 t.VEHICLE1 AS vehicle1,
		 t.VEHICLE2 AS vehicle2,
		 t.NOTE AS note,
		 t.CREAT_PEOPLE AS creatPeople,
		 t.CREAT_PEOPLE_ORG AS creatPeopleOrg ,
		 t.CREAT_TIME AS creatTime,
		 b.THROUGH_LINE AS throughLine,
		 t.POST_ID AS postId,
		 t.POST_Name AS postName,
		 t.CROSS_BUREAU AS crossBureau,
		 t.CREAT_REASON AS createReason,
		 t.VEHICLE_SUB_TYPE AS vehicleSubType,
		 t.VEHICLE_SUB_PEOPLE	 AS vehicleSubPeople,
		 t.VEHICLE_SUB_PEOPLE_ORG AS vehicleSubPeopleOrg,
         TO_CHAR(t.VEHICLE_SUB_TIME,'yyyy-MM-dd hh24:mi:SS')	AS vehicleSubTime,
         t.VEHICLE_CHECK_TYPE	 AS vehicleCheckType,
         t.VEHICLE_CHECK_PEOPLE	 AS vehicleCheckPeople,
         t.VEHICLE_CHECK_PEOPLE_ORG	 AS vehicleCheckPeopleOrg,
         TO_CHAR(t.VEHICLE_CHECK_TIME,'yyyy-MM-dd hh24:mi:SS')  AS vehicleCheckTime,
         t.CROSS_CHECK_TYPE AS crossCheckType,
		 t.CROSS_CHECK_PEOPLE AS crossCheckPeople,
		 t.CROSS_CHECK_PEOPLE_ORG AS crossCheckPeopleOrg,
		 TO_CHAR(t.CROSS_CHECK_TIME,'yyyy-MM-dd hh24:mi:SS')  AS crossCheckTime
      FROM HIGHLINE_CROSS WHERE 1=1 
      <if test="crossBureau != null and crossBureau !='' ">
         AND T.CROSS_BUREAU = #{crossBureau}
      </if>
      <if test="crossStartDate != null and crossStartDate != '' ">
         AND T.CROSS_START_DATE = #{crossStartDate}
      </if>
  
  
  </select>
  <select id="getHighlineTrainTimeForHighlineCrossId"  parameterType="map" resultMap="trainSubInfo">
  SELECT
		B.PLAN_TRAIN_ID AS planTrainId, 
		B.HIGHLINE_TRAIN_ID AS highLineTrainId,
		C.TRAIN_NBR AS trainNbr,
		C.PASS_BUREAU AS passBureau,
		D.PLAN_TRAIN_STN_ID AS planTrainStnId,
		D.STN_SORT AS stnSort,
		D.STN_NAME AS stnName,
		TO_CHAR(D.ARR_TIME,'yyyy-MM-dd hh24:mi:SS') AS ARRTIME,
		TO_CHAR(D.DPT_TIME,'yyyy-MM-dd hh24:mi:SS') AS DPTTIME
	FROM   HIGHLINE_CROSS A,HIGHLINE_CROSS_TRAIN B,PLAN_TRAIN C,PLAN_TRAIN_STN D
	WHERE A.HIGHLINE_CROSS_ID = B.HIGHLINE_CROSS_ID
		AND B.PLAN_TRAIN_ID = C.PLAN_TRAIN_ID 
		AND C.PLAN_TRAIN_ID = D.PLAN_TRAIN_ID
		AND A.HIGHLINE_CROSS_ID=#{highlineCrossId} 
		ORDER BY B.TRAIN_SORT,D.STN_SORT
  
  </select>
   <select id="getHighlineCrossList" parameterType="map" resultType="org.railway.com.trainplan.entity.HighlineCrossInfo">
      SELECT
         t.HIGHLINE_CROSS_ID AS highlineCrossId,
		 t.PLAN_CROSS_ID AS planCrossId,
		 t.CROSS_START_DATE AS crossStartDate,
		 t.CROSS_END_DATE AS crossEndDate,
		 t.CROSS_START_STN AS crossStartStn,
         t.CROSS_END_STN AS crossEndStn,
		 t.CROSS_NAME AS crossName,
		 t.SPARE_FLAG AS spareFlag,
		 t.RELEVANT_BUREAU AS relevantBureau,
		 t.TOKEN_VEH_BUREAU AS tokenVehBureau,
		 t.TOKEN_VEH_DEPT AS tokenVehDept,
		 t.TOKEN_VEH_DEPOT AS tokenVehDepot,
		 t.TOKEN_PSG_BUREAU AS tokenPsgBureau ,
		 t.TOKEN_PSG_DEPT AS tokenPsgDept,
		 t.CRH_TYPE AS crhType,
		 t.VEHICLE1 AS vehicle1,
		 t.VEHICLE2 AS vehicle2,
		 t.NOTE AS note,
		 t.CREAT_PEOPLE AS creatPeople,
		 t.CREAT_PEOPLE_ORG AS creatPeopleOrg ,
		 t.CREAT_TIME AS creatTime,
		 b.THROUGH_LINE AS throughLine,
		 t.POST_ID AS postId,
		 t.POST_Name AS postName,
		 t.CROSS_BUREAU AS crossBureau,
		 t.CREAT_REASON AS createReason,
		 t.VEHICLE_SUB_TYPE AS vehicleSubType,
		 t.VEHICLE_SUB_PEOPLE	 AS vehicleSubPeople,
		 t.VEHICLE_SUB_PEOPLE_ORG AS vehicleSubPeopleOrg,
         TO_CHAR(t.VEHICLE_SUB_TIME,'yyyy-MM-dd hh24:mi:SS')	AS vehicleSubTime,
         t.VEHICLE_CHECK_TYPE	 AS vehicleCheckType,
         t.VEHICLE_CHECK_PEOPLE	 AS vehicleCheckPeople,
         t.VEHICLE_CHECK_PEOPLE_ORG	 AS vehicleCheckPeopleOrg,
         TO_CHAR(t.VEHICLE_CHECK_TIME,'yyyy-MM-dd hh24:mi:SS')  AS vehicleCheckTime,
         t.CROSS_CHECK_TYPE AS crossCheckType,
		 t.CROSS_CHECK_PEOPLE AS crossCheckPeople,
		 t.CROSS_CHECK_PEOPLE_ORG AS crossCheckPeopleOrg,
		 TO_CHAR(t.CROSS_CHECK_TIME,'yyyy-MM-dd hh24:mi:SS')  AS crossCheckTime
      FROM HIGHLINE_CROSS t LEFT JOIN dic_rela_cross_post b ON  t.base_cross_id=b.base_cross_id WHERE t.CROSS_START_DATE = #{crossStartDate}
      <if test="tokenVehBureau != null and tokenVehBureau != '' ">
		  and t.TOKEN_VEH_BUREAU=#{tokenVehBureau}
	  </if>
	   <if test="trainNbr != null and trainNbr != '' ">
		  and t.CROSS_NAME like '%' || #{trainNbr} || '%'
	  </if>
	   <if test="throughLine != null and throughLine != '' ">
		  and b.THROUGH_LINE=#{throughLine}
	  </if>
	   <if test="tokenVehDepot != null and tokenVehDepot != '' ">
		  and t.TOKEN_VEH_DEPOT=#{tokenVehDepot}
	  </if>
	  <if test="crossBureau != null and crossBureau !='' ">
	      and t.cross_bureau = #{crossBureau}
	  </if>
      ORDER BY t.CROSS_NAME
   </select>

   <select id="getHighlineCrossTrainList"  parameterType="map" resultType="org.railway.com.trainplan.entity.HighLineCrossTrainInfo">
   SELECT  
        HIGHLINE_TRAIN_ID AS highlineTrainId,
		HIGHLINE_CROSS_ID AS highlineCrossId,
		PLAN_TRAIN_ID AS planTrainId,
		TRAIN_SORT AS trainSort,
		TRAIN_NBR AS trainNbr,
		RUN_DATE AS runDate
   FROM HIGHLINE_CROSS_TRAIN  WHERE HIGHLINE_CROSS_ID =#{highlineCrossId}
   </select>
   
   <select id="getHighlineCrossTrainBaseInfoList"  parameterType="string" resultType="org.railway.com.trainplan.entity.HighlineCrossTrainBaseInfo">
   SELECT 
		B.TRAIN_NBR As trainNbr,
		C.START_STN As startStn,
		TO_CHAR(C.START_TIME,'yyyy-MM-dd hh24:mi:SS') AS startTime,
		C.END_STN As endStn,
		C.START_BUREAU AS startStnBureau,
        C.END_BUREAU AS endStnBureau,
		TO_CHAR(C.END_TIME,'yyyy-MM-dd hh24:mi:SS') AS endTime
		FROM HIGHLINE_CROSS A,HIGHLINE_CROSS_TRAIN B,PLAN_TRAIN C
	WHERE A.HIGHLINE_CROSS_ID=B.HIGHLINE_CROSS_ID AND B.PLAN_TRAIN_ID=C.PLAN_TRAIN_ID AND A.HIGHLINE_CROSS_ID=#{highlineCrossId}
   
   </select>
   
   <delete id="deleteHighlienCrossTrainForHighlineCrossId" parameterType="map">
    DELETE  FROM HIGHLINE_CROSS_TRAIN 
    WHERE HIGHLINE_CROSS_ID in (${highlineCrossIds}) 
   </delete>
   
   
  <delete id="deleteHighlienCrossForHighlineCrossId" parameterType="map">
    DELETE  FROM HIGHLINE_CROSS 
    WHERE HIGHLINE_CROSS_ID in (${highlineCrossIds}) 
  </delete>  
  
  <update id="updateHighLineVehicle" parameterType="map">
  UPDATE HIGHLINE_CROSS 
  SET
    <choose>
      <when test="vehicle1 == null">VEHICLE1 = '',</when>
      <otherwise>VEHICLE1 = #{vehicle1},</otherwise>
    </choose>
    <choose>
      <when test="vehicle2 == null">VEHICLE2 = ''</when>
      <otherwise>VEHICLE2 = #{vehicle2}</otherwise>
    </choose>  
    WHERE HIGHLINE_CROSS_ID = #{highlineCrossId}
  </update>
   
   <update id="updateHighLineCrossId" parameterType="map" >
   UPDATE HIGHLINE_CROSS_TRAIN 
     SET HIGHLINE_CROSS_ID=#{highLineCrossId} 
     WHERE HIGHLINE_TRAIN_ID=#{highLineTrainId} 
   </update>
   <update id="updateHiglineCheckInfo" parameterType="map" >
   UPDATE HIGHLINE_CROSS 
     SET
        CHECK_TYPE=${checkType},
		CHECK_PEOPLE=#{checkPeople},
		CHECK_PEOPLE_ORG=#{checkPeopleOrg},
		CHECK_TIME=sysdate
  
     WHERE HIGHLINE_CROSS_ID IN (${highlineCrossIds})
   
   </update>
   
   
   <select id="getThroughLine" resultType="org.railway.com.trainplan.service.dto.OptionDto">
        select distinct THROUGH_LINE as name from dic_rela_cross_post
    </select>
    
    <select id="getCrhType" resultType="org.railway.com.trainplan.service.dto.OptionDto">
       select distinct CRH_TYPE as name from dic_crh_group
    </select>
    
    <select id="getVehicles" resultType="org.railway.com.trainplan.service.dto.OptionDto">
       select GROUP_ID AS code,GROUP_NBR as name from dic_crh_group
    </select>
    
    
    <select id="getDepot" resultType="org.railway.com.trainplan.service.dto.OptionDto">
        select distinct DEPOT_ID as code, depot_name as name from dic_crh_depot order by depot_id
    </select>
     <select id="getAcc" parameterType="map" resultType="org.railway.com.trainplan.service.dto.OptionDto">
	    select t3.ljpym as bureauCode, t2.acc_id as code,T2.ACC_NAME as name from tds1adm.ACCOUNT t2,tds1adm.department t3 where t2.acc_id in (select t1.acc_id from tds1adm.ACC_ROL_RELA t1 where t1.rol_id in (select t.rol_id from tds1adm.ROLE t where t.rol_name like '局动车调度'))
		and t2.fenlei01 = t3.dep_id 
		<if test="bureauCode != null">
		  and t3.ljpym=#{bureauCode}
		</if> 
		order by  t2.acc_id
	 </select>
	 
	 <delete id="deleteHighLineForDate" parameterType="map">
	  delete from HIGHLINE_CROSS where CROSS_BUREAU= #{crossBureau} and CROSS_START_DATE=#{startDate}
	 
	 </delete>
</mapper>